version: '3.7'

services:
  auth_db:
    hostname: auth_db
    image: postgres:16
    container_name: auth_db
    ports:
      - "1337:5432"
    env_file:
      .env
    networks:
      - auth_network

  auth_service:
    hostname: auth_service
    build:
      context: .
    container_name: auth_service
    ports:
      - "8000:8080"
    env_file:
      - .env
    depends_on:
      - auth_db
      - prometheus
    networks:
      - auth_network
      - hotels_network

  auth_consumer:
    build:
      context: .
    container_name: auth_consumer
    command: python src/consumer.py
    env_file:
      - .env
    depends_on:
      - auth_service
    networks:
      - auth_network
      - hotels_network
    volumes:
      - ./:/app
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: auth_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - auth_network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: auth_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - auth_network
    depends_on:
      - prometheus

networks:
  auth_network:
    driver: bridge
  hotels_network:
    external: true

volumes:
  prometheus_data:
  grafana_data: